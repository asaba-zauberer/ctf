{
  "meta": {
    "name": "04-medium",
    "version": "1.1",
    "defaultOutput": "text",
    "description": "Challenge 04."
  },
  "initialState": {
    "region": "",
    "identities": [
      {
        "id": "userA",
        "accountId": "123456789012",
        "arn": "arn:aws:iam::123456789012:user/userA",
        "userName": "userA",
        "policies": [
          "iam:ListRoles",
          "iam:GetRole",
          "iam:ListAttachedRolePolicies",
          "iam:GetPolicy",
          "iam:ListPolicyVersions",
          "iam:GetPolicyVersion",
          "sts:AssumeRole"
        ]
      },
      {
        "id": "audit-role",
        "accountId": "123456789012",
        "arn": "arn:aws:iam::123456789012:role/audit-role",
        "userName": "audit-role",
        "policies": [
          "secretsmanager:ListSecrets",
          "secretsmanager:GetSecretValue",
          "logs:DescribeLogGroups",
          "logs:DescribeLogStreams"
        ]
      }
    ],
    "activeIdentity": "userA",
    "custom": {
      "flag": "flag{secrets-from-assumed-role-123}",
      "secretId": "prod/db/password",
      "legacyPolicyArn": "arn:aws:iam::123456789012:policy/legacy-assume-audit"
    }
  },
  "commands": [
    {
      "match": { "equals": "aws sts get-caller-identity" },
      "response": {
        "render": "json",
        "json": {
          "UserId": "AIDAEXAMPLE",
          "Account": "123456789012",
          "Arn": "arn:aws:iam::123456789012:user/userA"
        }
      }
    },
    {
      "match": { "regex": "^aws\\s+configure\\s+set\\s+region\\s+us-east-1$" },
      "mutateState": [
        { "op": "set", "path": "region", "value": "us-east-1" }
      ],
      "response": { "text": "" }
    },
    {
      "match": { "regex": "^aws\\s+iam\\s+list-roles\\s*$" },
      "requires": { "regionSet": true, "hasPoliciesAny": ["iam:ListRoles"] },
      "response": {
        "render": "json",
        "json": {
          "Roles": [
            {
              "Path": "/",
              "RoleName": "audit-role",
              "RoleId": "AROAXXXXXEXAMPLE",
              "Arn": "arn:aws:iam::123456789012:role/audit-role",
              "CreateDate": "2025-10-04T00:00:00+00:00"
            }
          ]
        }
      },
      "errorOnFail": {
        "errorCode": "UnknownOperation",
        "message": "You must specify a region. You can also configure your region by running 'aws configure'.",
        "exitCode": 255
      }
    },
    {
      "match": { "regex": "^aws\\s+iam\\s+get-role\\s+--role-name\\s+audit-role\\s*$" },
      "requires": { "regionSet": true, "hasPoliciesAny": ["iam:GetRole"] },
      "response": {
        "render": "json",
        "json": {
          "Role": {
            "Path": "/",
            "RoleName": "audit-role",
            "RoleId": "AROAXXXXXEXAMPLE",
            "Arn": "arn:aws:iam::123456789012:role/audit-role",
            "AssumeRolePolicyDocument": "{ \"Version\":\"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"*\"}, \"Action\": \"sts:AssumeRole\" }] }",
            "CreateDate": "2025-10-04T00:00:00+00:00"
          }
        }
      }
    },
    {
      "match": {
        "regex": "^aws\\s+iam\\s+list-attached-role-policies\\s+--role-name\\s+audit-role\\s*$"
      },
      "requires": { "regionSet": true, "hasPoliciesAny": ["iam:ListAttachedRolePolicies"] },
      "response": {
        "render": "json",
        "json": {
          "AttachedPolicies": [
            {
              "PolicyName": "legacy-assume-audit",
              "PolicyArn": "arn:aws:iam::123456789012:policy/legacy-assume-audit"
            }
          ]
        }
      }
    },
    {
      "match": { "regex": "^aws\\s+iam\\s+get-policy\\s+--policy-arn\\s+arn:aws:iam::123456789012:policy/legacy-assume-audit\\s*$" },
      "requires": { "regionSet": true, "hasPoliciesAny": ["iam:GetPolicy"] },
      "response": {
        "render": "json",
        "json": {
          "Policy": {
            "PolicyName": "legacy-assume-audit",
            "PolicyId": "ANPAEXAMPLE",
            "Arn": "arn:aws:iam::123456789012:policy/legacy-assume-audit",
            "Path": "/",
            "DefaultVersionId": "v2",
            "AttachmentCount": 1,
            "IsAttachable": true,
            "CreateDate": "2025-09-01T00:00:00+00:00",
            "UpdateDate": "2025-10-03T00:00:00+00:00"
          }
        }
      }
    },
    {
      "match": { "regex": "^aws\\s+iam\\s+list-policy-versions\\s+--policy-arn\\s+arn:aws:iam::123456789012:policy/legacy-assume-audit\\s*$" },
      "requires": { "regionSet": true, "hasPoliciesAny": ["iam:ListPolicyVersions"] },
      "response": {
        "render": "json",
        "json": {
          "Versions": [
            {
              "VersionId": "v2",
              "IsDefaultVersion": true,
              "CreateDate": "2025-10-03T00:00:00+00:00"
            },
            {
              "VersionId": "v1",
              "IsDefaultVersion": false,
              "CreateDate": "2025-09-20T00:00:00+00:00"
            }
          ]
        }
      }
    },
    {
      "match": { "regex": "^aws\\s+iam\\s+get-policy-version\\s+--policy-arn\\s+arn:aws:iam::123456789012:policy/legacy-assume-audit\\s+--version-id\\s+v2\\s*$" },
      "requires": { "regionSet": true, "hasPoliciesAny": ["iam:GetPolicyVersion"] },
      "response": {
        "render": "json",
        "json": {
          "PolicyVersion": {
            "Document": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    { \"Sid\": \"ViewOnly\", \"Effect\": \"Allow\", \"Action\": [\"iam:Get*\", \"iam:List*\"], \"Resource\": \"*\" }\n  ]\n}",
            "VersionId": "v2",
            "IsDefaultVersion": true,
            "CreateDate": "2025-10-03T00:00:00+00:00"
          }
        }
      }
    },
    {
      "match": { "regex": "^aws\\s+iam\\s+get-policy-version\\s+--policy-arn\\s+arn:aws:iam::123456789012:policy/legacy-assume-audit\\s+--version-id\\s+v1\\s*$" },
      "requires": { "regionSet": true, "hasPoliciesAny": ["iam:GetPolicyVersion"] },
      "response": {
        "render": "json",
        "json": {
          "PolicyVersion": {
            "Document": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AssumeAudit\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\"sts:AssumeRole\"],\n      \"Resource\": \"arn:aws:iam::123456789012:role/audit-role\"\n    }\n  ]\n}",
            "VersionId": "v1",
            "IsDefaultVersion": false,
            "CreateDate": "2025-09-20T00:00:00+00:00"
          }
        }
      }
    },
    {
      "match": {
        "regex": "^aws\\s+sts\\s+assume-role\\s+--role-arn\\s+arn:aws:iam::123456789012:role/audit-role\\s+--role-session-name\\s+\\S+\\s*$"
      },
      "requires": { "regionSet": true, "hasPoliciesAny": ["sts:AssumeRole"] },
      "mutateState": [
        { "op": "set", "path": "activeIdentity", "value": "audit-role" }
      ],
      "response": {
        "render": "json",
        "json": {
          "Credentials": {
            "AccessKeyId": "ASIAEXAMPLE",
            "SecretAccessKey": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            "SessionToken": "IQoJb3JpZ2luX2VjE...",
            "Expiration": "2025-10-04T02:00:00Z"
          },
          "AssumedRoleUser": {
            "AssumedRoleId": "AROAEXAMPLE:ctf",
            "Arn": "arn:aws:iam::123456789012:role/audit-role"
          }
        }
      }
    },
    {
      "match": { "regex": "^aws\\s+sts\\s+get-caller-identity\\s*$" },
      "requires": { "regionSet": true, "activeIdentity": "audit-role" },
      "response": {
        "render": "json",
        "json": {
          "UserId": "AROAEXAMPLE:ctf",
          "Account": "123456789012",
          "Arn": "arn:aws:iam::123456789012:role/audit-role"
        }
      }
    },
    {
      "match": { "regex": "^aws\\s+logs\\s+describe-log-groups\\s*$" },
      "requires": {
        "regionSet": true,
        "hasPoliciesAny": ["logs:DescribeLogGroups"]
      },
      "response": {
        "render": "json",
        "json": {
          "logGroups": [
            {
              "arn": "arn:aws:logs:us-east-1:123456789012:log-group:/aws/ecs/audit-service",
              "logGroupName": "/aws/ecs/audit-service",
              "storedBytes": 0,
              "retentionInDays": 14
            },
            {
              "arn": "arn:aws:logs:us-east-1:123456789012:log-group:/aws/ecs/public-training",
              "logGroupName": "/aws/ecs/public-training",
              "storedBytes": 1048576,
              "retentionInDays": 7
            }
          ]
        }
      },
      "errorOnFail": {
        "errorCode": "AccessDenied",
        "message": "An error occurred (AccessDeniedException) when calling the DescribeLogGroups operation: User is not authorized to perform logs:DescribeLogGroups",
        "exitCode": 255
      }
    },
    {
      "match": {
        "regex": "^aws\\s+logs\\s+describe-log-streams\\s+--log-group-name\\s+/aws/ecs/audit-service\\s*$"
      },
      "requires": {
        "regionSet": true,
        "hasPoliciesAny": ["logs:DescribeLogStreams"]
      },
      "response": {
        "render": "json",
        "json": {
          "logStreams": [
            {
              "arn": "arn:aws:logs:us-east-1:123456789012:log-group:/aws/ecs/audit-service:log-stream:ecs/audit-service/0a1b2c3d",
              "logStreamName": "ecs/audit-service/0a1b2c3d",
              "lastEventTimestamp": 1759526400000,
              "storedBytes": 2048,
              "uploadSequenceToken": "496159830347698900000000000000"
            }
          ]
        }
      },
      "errorOnFail": {
        "errorCode": "AccessDenied",
        "message": "An error occurred (AccessDeniedException) when calling the DescribeLogStreams operation: User is not authorized to perform logs:DescribeLogStreams",
        "exitCode": 255
      }
    },
    {
      "match": { "regex": "^aws\\s+secretsmanager\\s+list-secrets\\s*$" },
      "requires": {
        "regionSet": true,
        "hasPoliciesAny": ["secretsmanager:ListSecrets"]
      },
      "response": {
        "render": "json",
        "json": {
          "SecretList": [
            {
              "ARN": "arn:aws:secretsmanager:us-east-1:123456789012:secret:prod/db/password",
              "Name": "prod/db/password",
              "Description": "database password",
              "CreatedDate": "2025-10-04T00:00:00+00:00"
            }
          ]
        }
      },
      "errorOnFail": {
        "errorCode": "AccessDenied",
        "message": "An error occurred (AccessDenied) when calling the ListSecrets operation: Access Denied",
        "exitCode": 255
      }
    },
    {
      "match": {
        "regex": "^aws\\s+secretsmanager\\s+get-secret-value\\s+--secret-id\\s+prod/db/password\\s*$"
      },
      "requires": {
        "regionSet": true,
        "hasPoliciesAny": ["secretsmanager:GetSecretValue"]
      },
      "response": {
        "render": "json",
        "json": {
          "ARN": "arn:aws:secretsmanager:us-east-1:123456789012:secret:prod/db/password",
          "Name": "prod/db/password",
          "SecretString": "flag{secrets-from-assumed-role-123}",
          "VersionId": "EXAMPLE1-90ab-cdef-fedc-ba987SECRET1"
        }
      },
      "errorOnFail": {
        "errorCode": "AccessDenied",
        "message": "An error occurred (AccessDenied) when calling the GetSecretValue operation: Access Denied",
        "exitCode": 255
      }
    }
  ],
  "fallbackError": {
    "errorCode": "UnknownOperation",
    "message": "An error occurred. See 'aws --help'.",
    "exitCode": 255
  }
}
